<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.zayy.mapper.CheckRecordMapper">

    <resultMap type="CheckRecord" id="CheckRecordResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="recordTime"    column="record_time"    />
        <result property="checkPlace"    column="check_place"    />
        <result property="recordId"    column="record_id"    />
        <result property="checkContent"    column="check_content"    />
        <result property="checkType"    column="check_type"    />
        <result property="placeName"    column="place_name"    />
    </resultMap>

    <sql id="selectCheckRecordVo">
        select id, user_id, record_time, check_place, record_id, check_content,check_type from check_record
    </sql>

    <select id="selectCheckRecordList" parameterType="CheckRecord" resultMap="CheckRecordResult">
        <include refid="selectCheckRecordVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="recordTime != null "> and record_time = #{recordTime}</if>
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="recordId != null  and recordId != ''"> and record_id = #{recordId}</if>
            <if test="checkType != null  and checkType != ''"> and check_type = #{checkType}</if>
            <if test="checkContent != null  and checkContent != ''"> and check_content = #{checkContent}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
        </where>
        order by record_time desc
    </select>
    <select id="selectBackByUserId" parameterType="CheckRecord" resultMap="CheckRecordResult">
        select * from check_record
        <where>
            user_id = (select id
            from check_user
            where user_name = (select user_name
            from sys_user
            where user_id = #{sysUserId}))
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
        </where>
        order by record_time desc
    </select>
    <select id="selectBackByKszrLists" parameterType="CheckRecord" resultMap="CheckRecordResult">
        select * from check_record
        <where>
            check_place in
            <foreach item="placeIdArray" collection="placeIdArray" open="(" separator="," close=")">
                #{placeIdArray}
            </foreach>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
        </where>
        order by record_time desc
    </select>
    <select id="selectBackByKszr" parameterType="CheckRecord" resultMap="CheckRecordResult">
        select * from check_record
        <where>
            check_place = (select place_id from check_place where id = #{sysUserDept})
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
        </where>
        order by record_time desc
    </select>
    <select id="selectBackByZnksLists" parameterType="CheckRecord" resultMap="CheckRecordResult">
        select * from check_record
        <where>
            check_place in
            <foreach item="placeIdArray" collection="placeIdArray" open="(" separator="," close=")">
                #{placeIdArray}
            </foreach>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
            or record_id in(
            SELECT record_id FROM record_function
            <where>
                <if test="sysUserOfficeId != null ">and record_office_id = #{sysUserOfficeId}</if>
            </where>
            )
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
        </where>
        order by record_time desc
    </select>

    <select id="selectBackByZnks" parameterType="CheckRecord" resultMap="CheckRecordResult">
        select * from check_record
        <where>
            check_place = (select place_id from check_place where id = #{sysUserDept})
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
            or record_id in(
            SELECT record_id FROM record_function
            <where>
                <if test="sysUserOfficeId != null ">and record_office_id = #{sysUserOfficeId}</if>
            </where>
            )
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="checkPlace != null  and checkPlace != ''"> and check_place = #{checkPlace}</if>
            <if test="startDate != null"> and record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and record_time &lt;= #{endDate}</if>
        </where>
        order by record_time desc
    </select>
    <select id="selectCheckRecordDayAll" parameterType="CheckRecord" resultMap="CheckRecordResult">
        select * from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        <where>
            <if test="startDate != null"> and t1.record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and t1.record_time &lt;= #{endDate}</if>
        </where>
        group by t1.check_place
    </select>

    <select id="selectCheckRecordDayXjy" parameterType="CheckRecord" resultMap="CheckRecordResult">
        select * from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        <where>
            t1.user_id = (select id
            from check_user
            where user_name = (select user_name
            from sys_user
            where user_id = #{sysUserId}))
            <if test="startDate != null"> and t1.record_time &gt;= #{startDate}</if>
            <if test="endDate != null"> and t1.record_time &lt;= #{endDate}</if>
        </where>
        group by t1.check_place
    </select>

    <select id="selectCheckRecordNameList" parameterType="CheckRecord" resultType="java.util.HashMap">
        select * from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        where t1.user_id = #{userId}
        order by t1.record_time desc
    </select>
    <select id="selectRecordKszrLists" parameterType="String" resultType="java.util.HashMap">
        select * from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        <where>
            t1.check_place in
            <foreach item="check_place" collection="check_place" open="(" separator="," close=")">
                #{check_place}
            </foreach>
        </where>
        order by record_time desc
    </select>
    <select id="selectRecordKszrList" parameterType="CheckRecord" resultType="java.util.HashMap">
        select *
        from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        <where>
            <if test="checkPlace != null  and checkPlace != ''"> and t1.check_place = #{checkPlace}</if>
        </where>
        order by record_time desc
    </select>
    <select id="selectRecordAll" parameterType="String" resultType="java.util.HashMap">
        select *
        from check_record t1
                 left join check_place t2
                           on t1.check_place = t2.place_id
        order by record_time desc
    </select>
    <select id="selectRecordZnksLists" parameterType="String" resultType="java.util.HashMap">
        select * from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        <where>
            t1.check_place in
            <foreach item="check_place" collection="check_place" open="(" separator="," close=")">
                #{check_place}
            </foreach>
            or t1.record_id IN (
            SELECT record_id FROM record_function
            <where>
                <if test="officeId != null ">and record_office_id = #{officeId}</if>
            </where>
            )
        </where>
        order by t1.record_time desc
    </select>
    <select id="selectRecordZnksList" parameterType="String" resultType="java.util.HashMap">
        select * from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        <where>
            <if test="check_place != null ">and t1.check_place = #{check_place}</if>
            or t1.record_id IN (
            SELECT record_id FROM record_function
            <where>
                <if test="officeId != null ">and record_office_id = #{officeId}</if>
            </where>
            )
        </where>
        order by t1.record_time desc
    </select>

    <select id="selectCheckRecordByRecordId" parameterType="CheckRecord" resultType="java.util.HashMap">
        select * from check_record t1
        left join check_place t2
        on t1.check_place = t2.place_id
        where t1.record_id = #{recordId}
    </select>

    <select id="selectCheckRecordById" parameterType="Long" resultMap="CheckRecordResult">
        <include refid="selectCheckRecordVo"/>
        where id = #{id}
    </select>

    <insert id="insertCheckRecord" parameterType="CheckRecord" useGeneratedKeys="true" keyProperty="id">
        insert into check_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="recordTime != null">record_time,</if>
            <if test="checkPlace != null">check_place,</if>
            <if test="recordId != null">record_id,</if>
            <if test="checkContent != null">check_content,</if>
            <if test="checkType != null">check_type,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="recordTime != null">#{recordTime},</if>
            <if test="checkPlace != null">#{checkPlace},</if>
            <if test="recordId != null">#{recordId},</if>
            <if test="checkContent != null">#{checkContent},</if>
            <if test="checkType != null">#{checkType},</if>
        </trim>
    </insert>

    <update id="updateCheckRecord" parameterType="CheckRecord">
        update check_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="recordTime != null">record_time = #{recordTime},</if>
            <if test="checkPlace != null">check_place = #{checkPlace},</if>
            <if test="recordId != null">record_id = #{recordId},</if>
            <if test="checkContent != null">check_content = #{checkContent},</if>
            <if test="checkType != null">check_type = #{checkType},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCheckRecordById" parameterType="Long">
        delete from check_record where id = #{id}
    </delete>

    <delete id="deleteCheckRecordByIds" parameterType="String">
        delete from check_record where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>